{"version":3,"sources":["redux/modules/CurrentData/types.js","utils/api.js","redux/modules/CurrentData/actions.js","redux/modules/CurrentData/reducer.js","redux/modules/CurrentData/index.js","redux/modules/CurrentLocation/types.js","redux/modules/CurrentLocation/actions.js","redux/modules/CurrentLocation/index.js","redux/modules/CurrentLocation/reducer.js","redux/modules/CitiesFolder/types.js","redux/modules/CitiesFolder/actions.js","redux/modules/CitiesFolder/index.js","redux/modules/CitiesFolder/reducer.js","utils/localStorage.js","components/Modal/index.js","utils/debounceHook.js","components/Header/index.js","components/Loader/index.js","components/CurrentWeatherInfo/index.js","container/Home/index.js","App.js","redux/store.js","index.js"],"names":["CURRENT_REQUEST","CURRENT_SUCCESS","CURRENT_FAILURE","getResponse","url","axios","method","getLocationName","name","getLocationLatLon","lat","lon","getCurrentData","dispatch","a","type","response","console","log","payload","data","message","INITIAL_STATE","error","isError","isBusy","reducer","state","action","SET_CURRENT_LOCATION","setCurrentLocation","cityName","countryName","city","country","ADD_NEW_CITY","REMOVE_CITY","addNewCity","length","newState","slice","splice","setStorage","key","value","localStorage","setItem","getStorage","getItem","ModalInput","isModal","setIsModal","useState","cities","setCities","inputCity","setInputCity","currentCityToAdd","setCurrentCityToAdd","setLoading","useDispatch","closeTab","fetchData","array","map","el","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","then","res","Background","CloseTab","onClick","onChange","e","target","AutoContainer","index","Autocomplete","obj","latitude","longtitude","clickToAdd","disabled","Object","keys","Modal","styled","div","button","verifyLocation","loc","newStr","split","Header","viewLocation","setViewLocation","geolocation","useGeolocation","viewCitiesList","setViewCitiesList","viewModal","setViewModal","location","setLocation","locationRedux","useSelector","s","CurrentLocationReducer","citiesFolder","CitiesFolder","pos","undefined","longitude","sys","deleteCity","history","citiesArray","includes","elementArray","push","arr","string","filter","join","removeCity","getPositionBG","id","Nav","Logo","prev","Provider","size","style","marginRight","CitiesClick","CSSTransition","in","timeout","classNames","BGCitiesList","MenuLocation","isMobile","alert","success","unique","isUniqueCityOfFolder","CitiesList","nav","CurrentLocation","Loader","Container","First","Second","Three","Four","Dot","dayArray","monthArray","getCurrentIcon","getCurrentDate","dateUTC","Date","verifyMinutes","min","CurrentWeatherInfo","dataWeatherRedux","CurrentDataReducer","loading","dailyInfo","setDailyInfo","currentData","setCurrentData","current","daily","element","dayOfWeek","dt","getUTCDay","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","DayWeatherInfoContainer","DayText","ImageWeatherDays","src","weather","icon","InfoTempText","Math","round","temp","max","IconArrowWind","deg","wind_deg","wind_speed","Widget","MainInfo","main","WeatherIcon","WeatherGroup","MainTemp","SecondaryTemp","feels_like","InfoCurrentDate","InfoSun","color","sunrise","getHours","getMinutes","sunset","InfoPressure","pressure","InfoHumidity","humidity","InfoWind","DaysWeatherInfo","FaLocationArrow","props","p","img","Home","HomeContainer","App","country_name","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7a1442c.chunk.js","sourcesContent":["export const CURRENT_REQUEST = 'CURRENTDATA/CURRENT_REQUEST';\r\nexport const CURRENT_SUCCESS = 'CURRENTDATA/CURRENT_SUCCESS';\r\nexport const CURRENT_FAILURE = 'CURRENTDATA/CURRENT_FAILURE';\r\n","import axios from 'axios';\r\n\r\nexport const getResponse = (url) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `https://api.openweathermap.org${url}`,\r\n    })\r\n}\r\n\r\nexport const getLocationName = (name) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `https://api.openweathermap.org/geo/1.0/direct?q=${name}&limit=5&appid=da84c3e9bf9be159cb8a175d21f9898a`,\r\n    })\r\n}\r\n\r\nexport const getLocationLatLon = (lat, lon) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=da84c3e9bf9be159cb8a175d21f9898a`,\r\n    })\r\n}\r\n\r\nexport const getLocation = () => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `https://api.ipgeolocation.io/ipgeo?apiKey=d7fecb0bfb804e30be825b994af40147`\r\n    })\r\n}","// @flow\r\nimport {\r\n  CURRENT_REQUEST,\r\n  CURRENT_SUCCESS,\r\n  CURRENT_FAILURE\r\n} from './types';\r\nimport { getResponse } from '../../../utils/api';\r\n\r\n\r\nexport const getCurrentData = (lat, lon) => async (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: CURRENT_REQUEST\r\n  });\r\n\r\n  try {\r\n    let url = `/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&units=metric&appid=${'da84c3e9bf9be159cb8a175d21f9898a'}`;\r\n    const response = await getResponse(url);\r\n    console.log(response)\r\n     return dispatch({\r\n       type: CURRENT_SUCCESS,\r\n       payload: response.data\r\n     });\r\n  } catch (e) {\r\n    console.log(e)\r\n    dispatch({\r\n      type: CURRENT_FAILURE,\r\n      payload: e && e.message ? e.message : e\r\n    });\r\n  }\r\n};","// @flow\r\nimport {\r\n    CURRENT_REQUEST,\r\n    CURRENT_SUCCESS,\r\n    CURRENT_FAILURE\r\n} from './types';\r\n\r\nconst INITIAL_STATE = {\r\n    error: null,\r\n    response: null,\r\n    isError: null,\r\n    isBusy: false\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CURRENT_REQUEST:\r\n      return {\r\n          ...state,\r\n          isBusy: true,\r\n          response: null\r\n        };\r\n      case CURRENT_SUCCESS:\r\n      return {\r\n          ...state,\r\n          isBusy: false,\r\n          response: action.payload\r\n        };\r\n        case CURRENT_FAILURE:\r\n        return {\r\n            ...state,\r\n            isBusy: false,\r\n            isError: action.payload,\r\n            response: null\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import {\r\n    getCurrentData\r\n  } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport {\r\n    getCurrentData\r\n};\r\n\r\nexport default reducer;","export const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\r\n","// @flow\r\nimport { SET_CURRENT_LOCATION } from './types';\r\n\r\nexport const setCurrentLocation = (cityName, countryName, lat, lon) => ({\r\n  type: SET_CURRENT_LOCATION,\r\n  payload: {\r\n    city: cityName,\r\n    country: countryName,\r\n    lat: lat,\r\n    lon: lon,\r\n  }\r\n});","import {\r\n  setCurrentLocation\r\n  } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport {\r\n  setCurrentLocation\r\n};\r\n\r\nexport default reducer;","// @flow\r\nimport { SET_CURRENT_LOCATION } from './types';\r\n\r\nconst reducer = (state = {city: null, country: null, lat: null, lon: null}, action) => {\r\n    switch (action.type) {\r\n      case SET_CURRENT_LOCATION:\r\n        return {\r\n          city: action.payload.city,\r\n          country: action.payload.country,\r\n          lat: action.payload.lat,\r\n          lon: action.payload.lon,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const ADD_NEW_CITY = 'ADD_NEW_CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\n","// @flow\r\nimport {\r\n  ADD_NEW_CITY,\r\n  REMOVE_CITY,\r\n  } from './types';\r\n\r\nexport const addNewCity = (data) => ({\r\n    type: ADD_NEW_CITY,\r\n    payload: data\r\n});\r\nexport const removeCity = (index) => ({\r\n  type: REMOVE_CITY,\r\n  payload: index\r\n});","import {\r\n  addNewCity,\r\n  removeCity\r\n  } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport {\r\n  addNewCity,\r\n  removeCity\r\n};\r\n\r\nexport default reducer;","// @flow\r\nimport {\r\n    ADD_NEW_CITY,\r\n    REMOVE_CITY,\r\n} from './types';\r\n\r\nconst reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n      case ADD_NEW_CITY:\r\n        if(state.length < 1){\r\n          return action.payload\r\n        } else {\r\n          return [action.payload, ...state];\r\n        }\r\n      case REMOVE_CITY:\r\n        let newState = state.slice(0)\r\n        newState.splice(action.payload, 1)\r\n        return [...newState];\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const setStorage = (key, value) => {\r\n    localStorage.setItem(key, value);\r\n}\r\n\r\nexport const getStorage = (key) => {\r\n    return localStorage.getItem(key);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { getLocationName } from '../../utils/api'\r\nimport { setCurrentLocation } from '../../redux/modules/CurrentLocation';\r\nimport useDebounce from '../../utils/debounceHook';\r\n\r\nconst debounce = (f, ms) => {\r\n    let isCooldown = false;\r\n  \r\n    return function() {\r\n      if (isCooldown) return;\r\n      f();\r\n      isCooldown = true;\r\n      setTimeout(() => isCooldown = false, ms);\r\n    };\r\n  \r\n}\r\n\r\nconst ModalInput = ({isModal, setIsModal}) => {\r\n    const [cities, setCities] = useState([]);\r\n    const [inputCity, setInputCity] = useState('');\r\n    const [currentCityToAdd, setCurrentCityToAdd] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const closeTab = () => {\r\n        setIsModal(false)\r\n    }\r\n    const handleChange = (e) => {\r\n        setInputCity(e.target.value)\r\n    }\r\n    const fetchData = async (name) => {\r\n        try{\r\n            setLoading(true)\r\n            let response = await getLocationName(name)\r\n            let array = response.data.map(el => {\r\n                return {\r\n                    name: el.name,\r\n                    lat: el.lat,\r\n                    lon: el.lon,\r\n                    country: el.country\r\n                }\r\n            })\r\n            return array\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        }\r\n    }\r\n    const clickToAdd = (obj, index) => {\r\n        setCurrentCityToAdd({\r\n            city: obj.name,\r\n            country: obj.country,\r\n            latitude: obj.lat,\r\n            longtitude: obj.lon,\r\n        });\r\n        setInputCity('');\r\n        setCities([cities[index]]);\r\n    }\r\n    const getAutocomplete = () => (\r\n        cities.map((el, index) => (\r\n            <Autocomplete key={index} onClick={() => clickToAdd(el, index)}>\r\n                <p>{el.name}, {el.country}</p>\r\n            </Autocomplete>\r\n        ))\r\n    )\r\n    const debouncedSearchTerm = useDebounce(inputCity, 500);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchTerm) {\r\n            setLoading(true);\r\n            fetchData(debouncedSearchTerm)\r\n            .then(res => {\r\n                setCities(res)\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }, [debouncedSearchTerm])\r\n    const verifyCity = () => {\r\n        return Object.keys(currentCityToAdd).length < 1\r\n    }\r\n    const addNewCityModal = () => {\r\n        dispatch(setCurrentLocation(currentCityToAdd.city, currentCityToAdd.country, currentCityToAdd.latitude, currentCityToAdd.longtitude))\r\n        closeTab()\r\n    }\r\n    return (\r\n        <>\r\n            <Background>\r\n            <Modal>\r\n                <CloseTab onClick={closeTab}>X</CloseTab>\r\n                <input type=\"text\" value={inputCity} onChange={handleChange}/>\r\n                {cities.length >= 1 ? \r\n                <AutoContainer>{getAutocomplete()}</AutoContainer> : <> </>}\r\n                <button disabled={verifyCity()} onClick={addNewCityModal}>Add to list</button>\r\n            </Modal>\r\n            </Background>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalInput\r\n\r\nconst Modal = styled.div`\r\n    position: absolute;\r\n    border: 1px solid rgb(204, 204, 204);\r\n    background: rgb(255, 255, 255);\r\n    overflow: auto;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    padding: 20px;\r\n    width: 80%;\r\n    right: 50%;\r\n    transform: translate(50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    input{\r\n        width: 80%;\r\n        margin-bottom: 10px;\r\n    }\r\n    button{\r\n        background-color: white;\r\n        border: 1px solid;\r\n        border-radius: 5px;\r\n    }\r\n`\r\nconst CloseTab = styled.button`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    height: 20px;\r\n    width: 20px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    padding: 0;\r\n`\r\nconst Background = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    z-index: 10;\r\n`\r\nconst Autocomplete = styled.div`\r\n    border-bottom: 1px black solid;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    &:last-child {\r\n        border-bottom: none;\r\n    }\r\n    &:hover{\r\n        text-decoration: underline;\r\n    }\r\n    p{\r\n        padding: 7px;\r\n        margin: 0;\r\n    }\r\n`\r\nconst AutoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border: 1px black solid;\r\n    border-radius: 20px;\r\n    margin-bottom: 10px;\r\n`","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },[value]);\r\n\r\n  return debouncedValue;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useGeolocation from 'react-hook-geolocation'\r\nimport styled from 'styled-components';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { IconContext } from 'react-icons';\r\nimport { ImLocation2 } from 'react-icons/im';\r\nimport { FaCity } from 'react-icons/fa'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './styles.css'\r\n\r\nimport { getCurrentData } from '../../redux/modules/CurrentData';\r\nimport { setCurrentLocation } from '../../redux/modules/CurrentLocation'\r\nimport { addNewCity } from '../../redux/modules/CitiesFolder';\r\nimport { getStorage, setStorage } from '../../utils/localStorage';\r\nimport { getLocationLatLon } from '../../utils/api';\r\nimport { removeCity } from '../../redux/modules/CitiesFolder'\r\nimport ModalInput from '../Modal'\r\n\r\nconst verifyLocation = (loc) => {\r\n    if(loc.length > 10){\r\n        let newStr = loc.split(', ');\r\n        if(newStr[0].length > 10) {\r\n            return newStr[0].slice(0, 8) + \"...\"\r\n        } else{\r\n            return newStr[0]\r\n        }\r\n    } else {\r\n        return loc\r\n    }\r\n}\r\n\r\nconst Header = () => {\r\n    const [viewLocation, setViewLocation] = useState(false);\r\n    const geolocation = useGeolocation();\r\n    const [viewCitiesList, setViewCitiesList] = useState(false);\r\n    const [viewModal, setViewModal] = useState(false);\r\n\r\n    const [location, setLocation] = useState('Not chosen');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const locationRedux = useSelector(s => s.CurrentLocationReducer);\r\n    const citiesFolder = useSelector(s => s.CitiesFolder);\r\n\r\n    const showHideSetLocation = () => {\r\n        setViewLocation((prev) => !prev)\r\n        setViewCitiesList(false)\r\n    };\r\n    const showHideCitiesList = () => {\r\n        setViewCitiesList((prev) => !prev)\r\n        setViewLocation(false)\r\n    };\r\n    const showHideModal = () => {\r\n        setViewModal(true)\r\n        setViewLocation(false)\r\n    }\r\n    async function success(pos) {\r\n        if(pos.latitude !== undefined && pos.longitude !== undefined){\r\n            try {\r\n                let response = await getLocationLatLon(pos.latitude, pos.longitude)\r\n                dispatch(setCurrentLocation(response.data.name, response.data.sys.country, pos.latitude, pos.longitude))\r\n                dispatch(getCurrentData(pos.latitude, pos.longitude))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    const getCurrentInfoLocationMobile = () => {\r\n        !geolocation.error ? \r\n        success(geolocation) :\r\n        alert(\"No geolocation, sorry.\")\r\n    }\r\n    const deleteCity = (lat,lon, index) => {\r\n        if(citiesFolder.length > 1){\r\n            const history = getStorage('CitiesDataWeatherApp');\r\n            let citiesArray = [];\r\n            if(history.includes(' / ')){\r\n                let arr = history.split(' / ');\r\n                let array = arr.map( el => {\r\n                    let elementArray = el.split(', ');\r\n                    return {\r\n                        latitude: elementArray[0],\r\n                        longitude: elementArray[1],\r\n                        city: elementArray[2],\r\n                        country: elementArray[3]\r\n                    }\r\n                })\r\n                citiesArray.push(...array)\r\n            } else {\r\n                let arr = history.split(', ');\r\n                citiesArray.push({latitude: arr[0], longitude: arr[1], city: arr[2], country: arr[3]})\r\n            }\r\n            const filteredArr = citiesArray.filter(el => (\r\n                el.latitude+'' !== lat+'' && el.longitude+'' !== lon+''\r\n            ))\r\n            const string = filteredArr.map(el => (\r\n                `${el.latitude}, ${el.longitude}, ${el.city}, ${el.country}`\r\n            ))\r\n            setStorage('CitiesDataWeatherApp', string.join(' / '))\r\n            dispatch(removeCity(index))\r\n        }\r\n    }\r\n    const isUniqueCityOfFolder = () => {\r\n        let unique = true;\r\n        if(citiesFolder.length > 1) {\r\n            citiesFolder.map(el => {\r\n                if(el.lat+'' === locationRedux.lat+'' && el.lon+'' === locationRedux.lon+''){\r\n                    unique = false\r\n                    return el\r\n                }\r\n                return el\r\n            })\r\n        } else {\r\n            if(citiesFolder[0].lat+'' === locationRedux.lat+'' && citiesFolder[0].lon+'' === locationRedux.lon+''){\r\n                unique = false\r\n            }\r\n        }\r\n        \r\n        return unique\r\n    }\r\n    const savePosition = () => {\r\n        let unique = isUniqueCityOfFolder()\r\n        if(unique){\r\n            dispatch(addNewCity(locationRedux))\r\n            const history = getStorage('CitiesDataWeatherApp');\r\n            setStorage('CitiesDataWeatherApp', `${locationRedux.lat}, ${locationRedux.lon}, ${locationRedux.city}, ${locationRedux.country} / ${history}`)\r\n            setViewLocation(false);\r\n            setViewCitiesList(true);\r\n        } else {\r\n            alert(\"This location is already saved\")\r\n        }\r\n    }\r\n    const setCurrentCity = (obj) => {\r\n        dispatch(setCurrentLocation(obj.city, obj.country, obj.lat, obj.lon))\r\n    }\r\n    useEffect(() => {\r\n        if(locationRedux.city !== null && locationRedux.country !== null){\r\n            setLocation(`${locationRedux.city}, ${locationRedux.country}`)\r\n        }\r\n\r\n    }, [locationRedux, citiesFolder])\r\n\r\n    const getPositionBG = (e) => {\r\n        if(e.target.id === 'back'){\r\n            setViewCitiesList(false)\r\n            setViewLocation(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Nav>\r\n            <Logo>Weather App</Logo>\r\n            <CurrentLocation onClick={showHideSetLocation}>\r\n                <IconContext.Provider value={{size: '13px', style: {marginRight: '5px'}}}>\r\n                    <ImLocation2/>\r\n                </IconContext.Provider>\r\n                <span>{verifyLocation(location)}</span>\r\n            </CurrentLocation>\r\n            <CitiesClick onClick={showHideCitiesList}>\r\n                <IconContext.Provider value={{size: '13px', style: {marginRight: '5px'}}}>\r\n                    <FaCity/>\r\n                </IconContext.Provider>\r\n                <span>Cities List</span>\r\n            </CitiesClick>\r\n            <CSSTransition\r\n                in={viewLocation}\r\n                timeout={1000}\r\n                classNames=\"header_animation\"\r\n            >\r\n                {viewLocation ? <BGCitiesList onClick={getPositionBG} id='back'>\r\n                    <MenuLocation>\r\n                        {isMobile ? <div onClick={getCurrentInfoLocationMobile}><p>Use current location</p></div> : <></>}\r\n                        <div onClick={showHideModal}><p>Use location from input</p></div>\r\n                        <div onClick={savePosition}><p>Save this location</p></div>\r\n                    </MenuLocation>\r\n                </BGCitiesList> : <></>}\r\n            </CSSTransition>\r\n            <CSSTransition\r\n                in={viewCitiesList}\r\n                timeout={1000}\r\n                classNames=\"header_animation\"\r\n            >\r\n                {viewCitiesList && citiesFolder.length >= 1 ? <BGCitiesList onClick={getPositionBG} id='back'>\r\n                    <CitiesList>\r\n                        {citiesFolder.map((el, index) => (\r\n                            <div key={index} id={index}>\r\n                                <p onClick={() => setCurrentCity(el)}>{verifyLocation(`${el.city}, ${el.country}`)}</p>\r\n                                {citiesFolder.length > 1 ? <button onClick={() => deleteCity(el.lat, el.lon, index)}>Delete</button> : <></>}\r\n                            </div>\r\n                        ))}\r\n                    </CitiesList>\r\n                </BGCitiesList>  : <></>}\r\n            </CSSTransition>\r\n        </Nav>\r\n        {viewModal ? <ModalInput isModal={viewModal} setIsModal={setViewModal}/> : <></>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Header\r\n\r\nconst Nav = styled.nav`\r\n    position: relative;\r\n    background: linear-gradient(90deg, rgba(224,226,0,0.7) 0%, rgba(204,128,12,0.7) 22%, rgba(6,12,160,0.7) 54%, rgba(2,208,216,0.7) 81%, rgba(0,212,255,0.7) 100%);\r\n    height: 35px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`\r\nconst Logo = styled.div`\r\n    font-weight: 600;\r\n    font-size: 19px;\r\n    font-style: italic;\r\n    color: white;\r\n`\r\nconst CurrentLocation = styled.div`\r\n    position: absolute;\r\n    right: 20px;\r\n    color: white;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`\r\nconst CitiesClick = styled.div`\r\n    position: absolute;\r\n    left: 20px;\r\n    color: white;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`\r\nconst MenuLocation = styled.div`\r\n    background: linear-gradient(0deg, rgba(34,193,195,0.8) 0%, rgba(253,187,45,0.8) 100%);\r\n    border: 1px black solid;\r\n    z-index: 5;\r\n    border-radius: 10px;\r\n    height: 70px;\r\n    width: 180px;\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 35px;\r\n    font-size: 14px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: space-around;\r\n    div{\r\n        width: 100%;\r\n        height: 100%;\r\n        box-sizing: content-box;\r\n        cursor: pointer;\r\n        border-bottom: 1px black solid;\r\n        &:last-child{\r\n            border-bottom: none;\r\n        }\r\n        p {\r\n            margin: 0;\r\n        }\r\n        &:hover{\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n`\r\nconst CitiesList = styled.div`\r\n    background: linear-gradient(0deg, rgba(34,193,195,0.8) 0%, rgba(253,187,45,0.8) 100%);\r\n    border: 1px black solid;\r\n    z-index: 5;\r\n    border-radius: 10px;\r\n    width: 180px;\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 35px;\r\n    font-size: 14px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: space-around;\r\n    div{\r\n        width: 100%;\r\n        height: 100%;\r\n        box-sizing: content-box;\r\n        padding: 10px 0;\r\n        border-bottom: 1px black solid;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        &:last-child{\r\n            border-bottom: none;\r\n        }\r\n        p {\r\n            margin: 0;\r\n            cursor: pointer;\r\n            &:hover{\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n        button {\r\n            background-color: white;\r\n            border: 1px black solid;\r\n            border-radius: 5px;\r\n            cursor: pointer;\r\n            &:hover{\r\n                background-color: rgba(227, 57, 0, 0.5);\r\n            }\r\n        }\r\n    }\r\n` \r\nconst BGCitiesList = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(0,0,0,0.4);\r\n    z-index: 15\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container>\r\n            <First/>\r\n            <Second/>\r\n            <Three/>\r\n            <Four/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`\r\nconst Dot = styled.div`\r\n    width: 3vw;\r\n\theight: 3vw;\r\n\tborder-radius: 100%;\r\n\tmargin: 2vw;\r\n\tbackground-image: linear-gradient(145deg, rgba(255,255,255,0.5) 0%, rgba(0,0,0,0) 100%);\r\n\tanimation: bounce 1.5s 0.5s linear infinite;\r\n    @keyframes bounce {\r\n        0%, 50%, 100% {\r\n            transform: scale(1);\r\n            filter: blur(0px);\r\n        }\r\n        25% {\r\n            transform: scale(0.6);\r\n            filter: blur(0px);\r\n        }\r\n        75% {\r\n            filter: blur(0px);\r\n            transform: scale(1.4);\r\n        }\r\n    }\r\n`\r\nconst First = styled(Dot)`\r\n    background-color: #feb60a;\r\n`\r\nconst Second = styled(Dot)`\r\n    background-color: var(--red)ff0062;\r\n\tanimation-delay: 0.1s;\r\n`\r\nconst Three = styled(Dot)`\r\n    background-color: #00dbf9;\r\n\tanimation-delay: 0.2s;\r\n`\r\nconst Four = styled(Dot)`\r\n    background-color: #da00f7;\r\n\tanimation-delay: 0.3s;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { IconContext } from \"react-icons\";\r\nimport { GiSunrise, GiSunset } from 'react-icons/gi';\r\nimport { FaLocationArrow } from 'react-icons/fa';\r\n\r\nimport Loader from '../Loader';\r\n\r\nconst dayArray = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tueday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n];\r\nconst monthArray = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n];\r\nconst getCurrentIcon = (type) => {\r\n    return `https://openweathermap.org/img/wn/${type}@2x.png`\r\n};\r\nconst getCurrentDate = (dateUTC) => {\r\n    return new Date(+`${dateUTC}000`)\r\n};\r\nconst getDailyArrayInfo = (array) => {\r\n    return array.map((element, index) => {\r\n        const dayOfWeek = dayArray[getCurrentDate(element.dt).getUTCDay()];\r\n        const month = monthArray[getCurrentDate(element.dt).getUTCMonth()]\r\n        const day = getCurrentDate(element.dt).getUTCDate();\r\n        const year = getCurrentDate(element.dt).getUTCFullYear();\r\n        return <DayWeatherInfoContainer key={index}>\r\n            <DayText>{dayOfWeek}</DayText>\r\n            <DayText>{`${month} ${day} ${year}`}</DayText>\r\n            <ImageWeatherDays src={getCurrentIcon(element.weather[0].icon)} size={45}/>\r\n            <InfoTempText>{`Min ${Math.round(element.temp.min)}°C`}</InfoTempText><InfoTempText>{`Max ${Math.round(element.temp.max)}°C`}</InfoTempText>\r\n            <div>\r\n                <IconArrowWind deg={element.wind_deg - 45} size={15}/>\r\n                <p>{`${element.wind_speed} m/s`}</p>\r\n            </div>\r\n        </DayWeatherInfoContainer>\r\n    })\r\n};\r\nconst verifyMinutes = (min) => {\r\n    let string = min + '';\r\n    if(string.length === 1) {\r\n        return '0' + string\r\n    } else {\r\n        return min\r\n    }\r\n}\r\n\r\nconst CurrentWeatherInfo = () => {\r\n    const dataWeatherRedux = useSelector(s => s.CurrentDataReducer);\r\n    const locationRedux = useSelector(s => s.CurrentLocationReducer);\r\n    const [loading, setLoading] = useState(true);\r\n    const [dailyInfo, setDailyInfo] = useState(null)\r\n    const [currentData, setCurrentData] = useState(null);\r\n    \r\n   useEffect(() => {\r\n      if(dataWeatherRedux.response !== null && !dataWeatherRedux.isBusy && dataWeatherRedux.isError === null){\r\n         setCurrentData(dataWeatherRedux.response.current)\r\n         setDailyInfo(getDailyArrayInfo(dataWeatherRedux.response.daily))\r\n         setLoading(false)\r\n      } else {\r\n         setLoading(true)\r\n      }\r\n   },[dataWeatherRedux])\r\n\r\n    return (\r\n        <Widget>\r\n           {loading ? \r\n           <Loader/> : \r\n           <>\r\n            <MainInfo>\r\n                <h3>{`${locationRedux.city}, ${locationRedux.country}`}</h3>\r\n                <p>{`${dayArray[getCurrentDate(currentData.dt).getUTCDay()]}, ${monthArray[getCurrentDate(currentData.dt).getUTCMonth()]} ${getCurrentDate(currentData.dt).getUTCDate()} ${getCurrentDate(currentData.dt).getUTCFullYear()}`}</p>\r\n                <p>{currentData.weather[0].main}</p>\r\n            </MainInfo>\r\n            <WeatherIcon>\r\n                <ImageWeatherDays src={getCurrentIcon(currentData.weather[0].icon)} size={120}/>\r\n                <WeatherGroup>\r\n                    <MainTemp>\r\n                        <p>{Math.round(currentData.temp)}°C</p>\r\n                    </MainTemp>\r\n                    <SecondaryTemp>\r\n                        <h4>Feels</h4>\r\n                        <p>{Math.round(currentData.feels_like)}°C</p>\r\n                    </SecondaryTemp>\r\n                </WeatherGroup>\r\n            </WeatherIcon>\r\n            <InfoCurrentDate>\r\n                <InfoSun>\r\n                    <div>\r\n                        <IconContext.Provider value={{ size: '22px', color: \"#ffdd00\" }}>\r\n                            <GiSunrise/>\r\n                        </IconContext.Provider>\r\n                        <h4>Sunrise at</h4>\r\n                        <p>{`${getCurrentDate(currentData.sunrise).getHours()}:${verifyMinutes(getCurrentDate(currentData.sunrise).getMinutes())}`}</p>\r\n                    </div>\r\n                    <div>\r\n                        <IconContext.Provider value={{ size: '22px', color: \"#e38202\" }}>\r\n                            <GiSunset/>\r\n                        </IconContext.Provider>\r\n                        <h4>Sunset at</h4>\r\n                        <p>{`${getCurrentDate(currentData.sunset).getHours()}:${getCurrentDate(currentData.sunset).getMinutes()}`}</p>\r\n                    </div>\r\n                </InfoSun>\r\n                <InfoPressure>\r\n                    <h4>Pressure</h4>\r\n                    <p>{currentData.pressure}mm</p>\r\n                </InfoPressure>\r\n                <InfoHumidity>\r\n                    <h4>Humidity</h4>\r\n                    <p>{currentData.humidity}%</p>\r\n                </InfoHumidity>\r\n                <InfoWind>\r\n                    <h4>Wind</h4>\r\n                    <div>\r\n                        <IconArrowWind deg={currentData.wind_deg - 45} size={30}/>\r\n                        <p>{currentData.wind_speed} m/s</p>\r\n                    </div>\r\n                </InfoWind>\r\n            </InfoCurrentDate>\r\n            <DaysWeatherInfo>\r\n                {dailyInfo}\r\n            </DaysWeatherInfo>\r\n            </>\r\n            }\r\n        </Widget>\r\n    )\r\n}\r\n\r\nexport default CurrentWeatherInfo\r\n\r\nconst Widget = styled.div`\r\n    width: 80%;\r\n    max-width: 715px;\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    border-radius: 20px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.3);\r\n    display: grid;\r\n    grid-template: \r\n        \"mainInfo mainInfo mainInfo\"\r\n        \"iconWeather infoData infoData\"\r\n        \"daysInfo daysInfo daysInfo\";\r\n   position: relative;\r\n   min-height: 120px;\r\n   @media (max-width: 768px) {\r\n      grid-template: \r\n            \"mainInfo\"\r\n            \"iconWeather\"\r\n            \"infoData\"\r\n            \"daysInfo\"\r\n            \"daysInfo\";\r\n    }\r\n`\r\nconst WeatherIcon = styled.div`\r\n    position: relative;\r\n    grid-area: iconWeather;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst WeatherGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst MainTemp = styled.div`\r\n    margin: 0;\r\n    font-size: 50px;\r\n    display: flex;\r\n    justify-content: start;\r\n    p{\r\n        margin: 0;\r\n    }\r\n`\r\nconst SecondaryTemp = styled.div`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n    h4{\r\n        margin: 0;\r\n        margin-left: 10px;\r\n    }\r\n    p{\r\n        margin: 0;\r\n    }\r\n`\r\nconst MainInfo = styled.div`\r\n    grid-area: mainInfo;\r\n    h3{\r\n        margin: 0;\r\n        font-size: 16px;\r\n    }\r\n    p{\r\n        margin: 0;\r\n        font-size: 14px;\r\n    }\r\n\r\n`\r\nconst DaysWeatherInfo = styled.div`\r\n    grid-area: daysInfo;\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr);\r\n    padding-top: 30px;\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n      grid-row-gap: 20px;\r\n   }\r\n`\r\nconst InfoCurrentDate = styled.div`\r\n    grid-area: infoData;\r\n    display: grid;\r\n    grid-template: \r\n        \"sun sun sun\"\r\n        \"press hum wind\" / 1fr 1fr 1fr\r\n   ;\r\n   @media (max-width: 768px) {\r\n      grid-template: \r\n            \"sun sun\"\r\n            \"press hum\"\r\n            \"wind wind\" / 1fr 1fr;\r\n   }\r\n`\r\nconst InfoSun = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    grid-area: sun;\r\n    margin-bottom: 5px;\r\n    div{\r\n        display: flex;\r\n        margin: 0 10px;\r\n        align-items: center;\r\n        h4 {\r\n            margin: 0;\r\n            font-weight: 500;\r\n            font-size: 12px;\r\n        }\r\n        p{\r\n            margin: 0;\r\n            margin-left: 5px;\r\n            font-size: 15px;\r\n            @media (max-width: 768px) {\r\n                font-size: 10px;\r\n            }\r\n        }\r\n    }\r\n`\r\nconst InfoPressure = styled.div`\r\n    grid-area: press;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h4{\r\n        margin: 0;\r\n        margin-bottom: 5px;\r\n    }\r\n    p {\r\n        margin: 0;\r\n        font-size: 20px;\r\n    }\r\n`\r\nconst InfoHumidity = styled.div`\r\n    grid-area: hum;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h4{\r\n        margin: 0;\r\n        margin-bottom: 5px;\r\n    }\r\n    p {\r\n        margin: 0;\r\n        font-size: 20px;\r\n    }\r\n`\r\nconst InfoWind = styled.div`\r\n    grid-area: wind;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h4{\r\n        margin: 0 0 5px 0;\r\n    }\r\n    div{\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        align-items: center;\r\n        width: 100%;\r\n        p{\r\n            margin: 0;\r\n            display: inline-block;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n    \r\n`\r\nconst IconArrowWind = styled(FaLocationArrow)`\r\n    ${props => \r\n    `transform: rotate(${props.deg}deg);\r\n    height: ${props.size}px`};\r\n    color: #b5b5b5;\r\n`\r\nconst DayWeatherInfoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    div{\r\n        display: flex;\r\n        padding-top: 10px;\r\n        p{\r\n            font-size: 10px;\r\n            margin: 0 0 0 5px;\r\n        }\r\n    }\r\n`\r\nconst DayText = styled.p`\r\n    margin: 0;\r\n    font-size: 12px;\r\n    @media (max-width: 768px) {\r\n        font-size: 10px;\r\n   }\r\n`\r\nconst ImageWeatherDays = styled.img`\r\n    ${props => \r\n    `height: ${props.size}px`};\r\n`\r\nconst InfoTempText = styled.p`\r\n    margin: 0;\r\n    font-size: 10px;\r\n`","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from '../../components/Header';\r\nimport CurrentWeatherInfo from '../../components/CurrentWeatherInfo';\r\nimport {getCurrentData} from '../../redux/modules/CurrentData'\r\n\r\nconst Home = () => {\r\n    const {CurrentLocationReducer, CurrentDataReducer} = useSelector(s => s)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(CurrentLocationReducer.lat !== null && CurrentLocationReducer.lon !== null && !CurrentDataReducer.isBusy){\r\n            dispatch(getCurrentData(CurrentLocationReducer.lat, CurrentLocationReducer.lon))\r\n        }\r\n    }, [CurrentLocationReducer, dispatch])\r\n\r\n    return (\r\n        <HomeContainer>\r\n            <Header/>\r\n            <CurrentWeatherInfo/>\r\n        </HomeContainer>\r\n    )\r\n};\r\n\r\nexport default Home\r\n\r\nconst HomeContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 100vh;\r\n    background: linear-gradient(230deg, rgba(224,226,0,0.3) 0%, rgba(204,128,12,0.3) 22%, rgba(6,12,160,0.3) 54%, rgba(2,208,216,0.3) 81%, rgba(0,212,255,0.3) 100%);\r\n    @media (max-width: 768px) {\r\n        padding-bottom: 15px;\r\n    }\r\n`","import React, {useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport Home from './container/Home'\r\nimport {getLocation} from './utils/api'\r\nimport {setStorage, getStorage} from './utils/localStorage'\r\nimport {addNewCity} from './redux/modules/CitiesFolder'\r\nimport {setCurrentLocation} from './redux/modules/CurrentLocation'\r\nimport {getCurrentData} from './redux/modules/CurrentData'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = async () => {\r\n    await getLocation()\r\n    .then((res) => {\r\n      if(!res.data.error !== undefined){\r\n        let citiesArray = [];\r\n        setStorage('CitiesDataWeatherApp', `${res.data.latitude}, ${res.data.longitude}, ${res.data.city}, ${res.data.country_name}`)\r\n        citiesArray.push({lat: res.data.latitude, lon: res.data.longitude, city: res.data.city, country: res.data.country_name})\r\n        console.log('cities at App', citiesArray)\r\n        dispatch(addNewCity(citiesArray));\r\n        dispatch(setCurrentLocation(res.data.city, res.data.country_name, res.data.latitude, res.data.longitude))\r\n        dispatch(getCurrentData(res.data.latitude, res.data.longitude))\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const cities = getStorage('CitiesDataWeatherApp');\r\n    if(cities === undefined || cities === null) {\r\n      fetchData()\r\n    } else {\r\n      let citiesArray = [];\r\n      if(cities.includes(' / ')){\r\n        let arr = cities.split(' / ');\r\n        let array = arr.map( el => {\r\n          let elementArray = el.split(', ');\r\n          return {\r\n            lat: elementArray[0],\r\n            lon: elementArray[1],\r\n            city: elementArray[2],\r\n            country: elementArray[3]\r\n          }\r\n        })\r\n        citiesArray.push(...array)\r\n      } else {\r\n        let arr = cities.split(', ');\r\n        citiesArray.push({lat: arr[0], lon: arr[1], city: arr[2], country: arr[3]})\r\n      }\r\n      console.log(citiesArray)\r\n      dispatch(addNewCity(citiesArray))\r\n      dispatch(setCurrentLocation(citiesArray[0].city, citiesArray[0].country, citiesArray[0].lat, citiesArray[0].lon))\r\n      dispatch(getCurrentData(citiesArray[0].lat, citiesArray[0].lon))\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Home/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport CurrentDataReducer from './modules/CurrentData';\r\nimport CurrentLocationReducer from './modules/CurrentLocation';\r\nimport CitiesFolder from './modules/CitiesFolder';\r\n\r\nconst rootReducer = combineReducers({\r\n  CurrentDataReducer,\r\n  CurrentLocationReducer,\r\n  CitiesFolder,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools((applyMiddleware(thunkMiddleware))));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}